import numpy as np
from scipy.stats import f

# Данные из таблицы
data = np.array([
    [-1.607, 0.251, -1.414, 1.230, -1.652, -1.406, -1.703, -0.877, -0.953, 0.146],
    [-1.250, -2.651, -1.155, -2.489, -0.875, -0.395, -1.025, -2.327, -1.400, -0.273],
    [-0.562, -1.833, -3.236, -1.872, -2.233, -0.596, -0.632, -1.496, -1.106, -0.669],
    [-0.572, -1.609, -1.290, -2.054, -1.001, -2.211, -1.142, -0.232, -2.330, -2.071],
    [-2.305, -0.952, -0.862, -0.366, -1.493, 0.303, -0.295, -0.794, -1.581, -2.629]
])

# Разделение на две выборки
sample1 = data[:2, :].flatten()
sample2 = data[2:, :].flatten()


# Проверка гипотезы о совпадении дисперсий
def check_variances_equal(sample1, sample2, epsilon=0.07):
    n, m = len(sample1), len(sample2)

    # вычисление выборочных дисперсий
    var1 = np.var(sample1, ddof=0)
    var2 = np.var(sample2, ddof=0)

    # построение случайной величины eta
    eta = (m - 1) * var1 / ((n - 1) * var2)

    # определение степеней свободы
    dfn = n - 1
    dfd = m - 1

    # критические значения для заданного уровня значимости
    q1 = f.ppf(epsilon / 2, dfn, dfd)
    q2 = f.ppf(1 - epsilon / 2, dfn, dfd)

    # проверка гипотезы
    if eta < q1 or eta > q2:
        result = "Отвергаем нулевую гипотезу: дисперсии не равны."
    else:
        result = "Не отвергаем нулевую гипотезу: дисперсии равны."

    print(result)
    return eta, q1, q2


# Проверка гипотезы о равенстве дисперсий
eta, q1, q2 = check_variances_equal(sample1, sample2)

print(f"Eta: {eta}")
print(f"q1: {q1}")
print(f"q2: {q2}")

